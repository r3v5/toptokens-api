services:
  top-tokens-api:
    build:
      context: ./app
      dockerfile: Dockerfile.dev
    command: gunicorn core.wsgi:application --bind 0.0.0.0:8000
    volumes:
      - static_volume:/home/app/top-tokens-api/staticfiles
      - media_volume:/home/app/top-tokens-api/mediafiles
      - ./app/:/usr/src/app/
    ports:
      - 8000:8000
    env_file:
      - ./.env.dev
    depends_on:
      - top-tokens-db
  
  nginx:
    build: ./nginx_dev
    restart: always
    volumes:
      - static_volume:/home/app/top-tokens-api/staticfiles
      - media_volume:/home/app/top-tokens-api/mediafiles
    ports:
      - 1337:80
    depends_on:
      - top-tokens-api
  
  top-tokens-db:
    image: postgres:15
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    restart: always
    env_file:
      - ./.env.dev

  redis:
    image: redis:7.2.5-alpine
    hostname: redis
    command: redis-server --save "" --appendonly no --maxmemory 1gb  # Disable RDB snapshots and set max memory
    volumes:
      - redis_data:/data
    environment:
      - REDIS_MAXMEMORY=1gb
  
  worker:
    build:
      context: ./app
      dockerfile: Dockerfile.dev
    hostname: worker
    entrypoint: celery
    command: -A celery_app.app worker --loglevel=info
    volumes:
      - ./app/:/usr/src/app/
    links:
      - redis
    depends_on:
      - redis
      - top-tokens-db
      - top-tokens-api
    env_file:
      - ./.env.dev
    environment:
      - CELERY_BROKER_CONNECTION_RETRY_ON_STARTUP=True
  
  celery-beat:
    build:
      context: ./app
      dockerfile: Dockerfile.dev
    hostname: celery-beat
    entrypoint: celery
    command: -A celery_app.app beat --loglevel=info
    volumes:
      - ./app/:/usr/src/app/
    depends_on:
      - redis
      - top-tokens-db
      - top-tokens-api
    env_file:
      - ./.env.dev
    environment:
      - CELERY_BROKER_CONNECTION_RETRY_ON_STARTUP=True
  
volumes:
  postgres_data:
  static_volume:
  media_volume:
  redis_data: